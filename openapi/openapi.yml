swagger: '2.0'
info:
  description: >-
    This is meddle, an app that keeps track of medications with notification
    feature.
  version: 3.0.0
  title: Meddle
  contact:
    email: info@decagonhq.com
host: meddle.herokuapp.com
basePath: /api/v1
schemes:
  - https
  - http
paths:
  /auth/signup:
    post:
      tags:
        - user
      summary: Create user
      description: This creates a new user entry in the data.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /auth/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: The user email for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  /users:
    get:
      tags:
        - user
      summary: Get users
      description: ''
      operationId: getUserByEmail
      produces:
        - application/json
      parameters:
        - name: email
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: email
          in: path
          description: The email that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid email supplied
        '404':
          description: User not found
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      ID:
        type: integer
        format: uint
      CreatedAt:
        type: int64
      UpdatedAt:
          type: int64
      DeletedAt:
          type: int64
      Name:
        type: string
      Email:
        type: string
      PhoneNumber:
        type: string
      password:
        type: string
      HashedPassword:
        type: string
      IsEmailActive:
        type: boolean
    xml:
      name: Blacklist
  Blacklist:
    type: object
    properties:
      ID:
        type: integer
        format: uint
      CreatedAt:
        type: int64
      UpdatedAt:
        type: int64
      DeletedAt:
        type: int64
      Token:
        type: string
      Email:
        type: string

