openapi: 3.0.1
info:
  title: Meddle
  description: This is meddle, an app that keeps track of medications with notification
    feature.
  contact:
    email: info@decagonhq.com
  version: 3.0.0
servers:
  - url: https://meddle-api.herokuapp.com/api/v1
  - url: http://localhost:8081/api/v1
paths:
  /auth/signup:
    post:
      tags:
        - user
      summary: Create user
      description: This creates a new user entry in the data.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Created medication successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
      x-codegen-request-body-name: Signup
  /auth/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      requestBody:
        description: login user to the system
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Invalid username/password supplied
          content: {}
      x-codegen-request-body-name: user
  /logout:
    post:
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
  /verifyEmail/{token}:
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Verify users email
      operationId: verifyEmail
      parameters:
        - name: token
          in: path
          description: 'Gets the token sent by signup. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully verified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid token supplied
          content: {}
  /password/forgot:
    post:
      tags:
        - user
      summary: Sends the user email when forgot password is hit
      operationId: ForgotPassword
      requestBody:
        description: Sends the user email when forgot password is hit
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        required: true
      responses:
        200:
          description: link to reset password successfully sent
          headers:
            X-Rate-Limit:
              schema:
                type: string
                format: string
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
        400:
          description: email was not sent
          content: {}
      x-codegen-request-body-name: ForgortPassword
  /password/reset/{token}:
    post:
      tags:
        - user
      summary: update a user's password
      operationId: resetPassword
      parameters:
        - name: token
          in: path
          description: 'Gets the token sent to the user'
          required: true
          schema:
            type: string
      responses:
        200:
          description: password reset successfully, Login to continue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordRequest'
        400:
          description: error unmarshalling body
          content: {}
  /user/medications:
    post:
      security:
        - bearerAuth: []
      tags:
        - medication
      summary: Create medication
      description: This creates a new medication entry in the data.
      operationId: createMedication
      requestBody:
        description: medication to add the system
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Medication'
        required: true
      responses:
        200:
          description: Created medication successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        400:
          description: Bad request from user
          content: {}
        403:
          description: Forbidden user
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: medication
  /user/medications/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - medication
      summary: Get user medication by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: retrieved medications successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        404:
          description: Medication not found
          content: {}
        500:
          description: Internal server error
          content: {}
  /user/medications/next:
    get:
      security:
        - bearerAuth: []
      tags:
        - medication
      summary: Get next medication for user
      description: This gets next medication related to a logged in user.
      operationId: getNextMedication
      responses:
        200:
          description: get next medications successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        403:
          description: Forbidden user
          content: {}
        500:
          description: Internal server error
          content: {}
components:
  schemas:
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      xml:
        name: UserRequest
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: uint
          example: 1
        created_at:
          type: string
          format: date-time # e.g 2022-08-09T06:35:43.511Z
        updated_at:
          type: string
          format: date-time # e.g 2022-08-09T06:35:43.511Z
        deleted_at:
          type: string
          format: date-time #e.g 2022-08-09T06:35:43.511Z
        name:
          type: string
          format: string
          example: Ken
        email:
          type: string
          format: email
          example: ken@gmail.com
        password:
          type: string
          format: password
          example: password
        phone_number:
          type: string
          format: phone
          example: "090834343"
      xml:
        name: UserResponse
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      xml:
        name: ForgotPasswordRequest
    ForgotPasswordResponse:
      type: object
      properties:
        message:
          type: string
          format: object
      xml:
        name: ForgotPasswordResponse
    ResetPasswordRequest:
      type: object
      properties:
        password:
          type: string
          format: password
        confirmPassword:
          type: object
      xml:
        name: ForgotPasswordRequest
    ResetPasswordResponse:
      type: object
      properties:
        message:
          type: string
          format: object
      xml:
        name: ResetPasswordResponse
    SignupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserResponse'
        errors:
          type: string
          example: ""
        message:
          type: string
          example: user created successfully
        status:
          type: string
          example: Created
    LoginResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/loginResponseData'
        errors:
          type: string
          example: ""
        message:
          type: string
          example: user created successfully
        status:
          type: string
          example: Created
    User:
      type: object
      properties:
        name:
          type: string
        phone_number:
          type: string
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    loginResponseData:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Ken
        phone_number:
          type: string
          example: "09043556"
        email:
          type: string
          example: ken@gmail.com
        accessToken:
          type: string
          example: Rbhfwi2PUXndOWVlUpsy0
    Medication:
      type: object
      properties:
        name:
          type: string
          example: paracetamol
        dosage:
          type: integer
          description: number of medication (dose) to take
          format: int
          example: 2
        time_interval:
          type: integer
          description: the next time-interval of hours to take your medication
          format: int
          example: 8
        medication_start_date:
          type: string
          description: day for starting medication
          format: date-time
        duration:
          type: integer
          description: number of days to take the medication
          format: int
          example: 7
        medication_prescribed_by:
          type: string
          example: Dr Tolu
        medication_stop_date:
          type: string
          description: expected date to finish medication
          format: date-time
        medication_start_time:
          type: string
          description: expected day to start medication
          format: date-time
        purpose_of_medication:
          type: string
          example: malaria treatment
      xml:
        name: Medication
    MedicationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/medicationResponseData'
        errors:
          type: string
          example: ""
        message:
          type: string
          example: Signup successful, check your email for verification
        status:
          type: string
          example: Created
    medicationResponseData:
      type: object
      properties:
        id:
          type: integer
          format: uint
          example: 1
        name:
          type: string
          example: paracetamol
        dosage:
          type: integer
          format: int
          example: 2
        time_interval:
          type: integer
          description: the next time-interval of hours to take your medication
          example: 8
        medication_start_date:
          type: string
          description: day for starting medication
          format: date-time
        duration:
          type: integer
          description: number of days to take the medication
          format: int
          example: 7
        medication_prescribed_by:
          type: string
          example: Dr Tolu
        medication_stop_date:
          type: string
          description: expected date to finish medication
          format: date-time
        medication_start_time:
          type: string
          description: expected day to start medication
          format: date-time
        next_dosage_time:
          type: string
          description: next time to take of medication (dose)
          format: date-time
        purpose_of_medication:
          type: string
          example: malaria treatment
        user_id:
          type: integer
          description: owner of medication id
          format: uint
          example: 2
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      xml:
        name: MedicationResponse
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
